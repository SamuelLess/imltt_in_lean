import IMLTT.untyped.AbstractSyntax
import IMLTT.untyped.Weakening
import IMLTT.untyped.Substitution
import IMLTT.untyped.proofs.Weakening
import IMLTT.untyped.proofs.Substitution
import IMLTT.untyped.proofs.Contexts
import IMLTT.untyped.proofs.Mixture

import IMLTT.typed.JudgmentsAndRules
import IMLTT.typed.proofs.Recursor
import IMLTT.typed.proofs.boundary.BoundaryIsCtx

-- case IsEqualTermVarEq
-- ⊢ ∀ {x : Nat} {Γ : Ctx x} {A : Tm x},
--     Γ ⊢ A type →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : x = m) (S : Tm l) (A_1 : Tm m),
--           Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : x + 1 = m) (S : Tm l) (a a' A_1 : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ ⬝ A = Γ_1 ⊗ Δ →
--               eqM ▸ v(0) = a →
--                 eqM ▸ v(0) = a' → eqM ▸ A⌊↑ₚidₚ⌋ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermWeakEq
-- ⊢ ∀ {x : Nat} {i : Fin x} {Γ : Ctx x} {A B : Tm x},
--     (Γ ⊢ v(i) ≡ v(i) ∶ A) →
--       Γ ⊢ B type →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : x = m) (S : Tm l) (a a' A_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ = Γ_1 ⊗ Δ →
--                 eqM ▸ v(i) = a →
--                   eqM ▸ v(i) = a' → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : x = m) (S : Tm l) (A : Tm m),
--               Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ B = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A⌊↑₁m↬l⌋ type) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : x + 1 = m) (S : Tm l) (a a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ ⬝ B = Γ_1 ⊗ Δ →
--                   eqM ▸ v(i)⌊↑ₚidₚ⌋ = a →
--                     eqM ▸ v(i)⌊↑ₚidₚ⌋ = a' →
--                       eqM ▸ A⌊↑ₚidₚ⌋ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermUnitComp
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A : Tm (n + 1)} {a : Tm n},
--     Γ ⬝ 𝟙 ⊢ A type →
--       (Γ ⊢ a ∶ A⌈⋆⌉₀) →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (A_1 : Tm m),
--             Γ_1 ⊢ S type → eqM ▸ Γ ⬝ 𝟙 = Γ_1 ⊗ Δ → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_4 A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ a = a_4 → eqM ▸ A⌈⋆⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_4⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ A.indUnit ⋆ a = a_5 →
--                     eqM ▸ a = a' → eqM ▸ A⌈⋆⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermPiComp
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A : Tm n} {b B : Tm (n + 1)} {a : Tm n},
--     (Γ ⬝ A ⊢ b ∶ B) →
--       (Γ ⊢ a ∶ A) →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (a A_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ ⬝ A = Γ_1 ⊗ Δ → eqM ▸ b = a → eqM ▸ B = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_4 A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ a = a_4 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_4⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ (λA; b)◃a = a_5 →
--                     eqM ▸ b⌈a⌉₀ = a' → eqM ▸ B⌈a⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermSigmaFirstComp
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {a b A : Tm n} {B : Tm (n + 1)},
--     (Γ ⊢ a ∶ A) →
--       (Γ ⊢ b ∶ B⌈a⌉₀) →
--         Γ ⊢ ΣA;B type →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_4 A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ a = a_4 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_4⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 A : Tm m),
--                 Γ_1 ⊢ S type →
--                   eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ b = a_5 → eqM ▸ B⌈a⌉₀ = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A_1 : Tm m),
--                   Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → (eqM ▸ ΣA;B) = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--                 ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_7 a' A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       eqM ▸ π₁ a&b = a_7 →
--                         eqM ▸ a = a' → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_7⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermSigmaSecondComp
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {a b A : Tm n} {B : Tm (n + 1)},
--     (Γ ⊢ a ∶ A) →
--       (Γ ⊢ b ∶ B⌈a⌉₀) →
--         Γ ⊢ ΣA;B type →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_4 A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ a = a_4 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_4⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 A : Tm m),
--                 Γ_1 ⊢ S type →
--                   eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ b = a_5 → eqM ▸ B⌈a⌉₀ = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A_1 : Tm m),
--                   Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → (eqM ▸ ΣA;B) = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--                 ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_7 a' A : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       eqM ▸ π₂ a&b = a_7 →
--                         eqM ▸ b = a' → eqM ▸ B⌈π₁ a&b⌉₀ = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_7⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermNatZeroComp
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {z : Tm n} {A : Tm (n + 1)} {s : Tm (n + 2)},
--     Γ ⬝ 𝒩 ⊢ A type →
--       (Γ ⊢ z ∶ A⌈𝓏⌉₀) →
--         (Γ ⬝ 𝒩 ⬝ A ⊢ s ∶ A⌈(ₛ↑ₚidₚ), 𝓈(v(0))⌉⌊↑ₚidₚ⌋) →
--           (Γ ⊢ 𝓏 ∶ 𝒩) →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (A_1 : Tm m),
--                 Γ_1 ⊢ S type → eqM ▸ Γ ⬝ 𝒩 = Γ_1 ⊗ Δ → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ z = a → eqM ▸ A⌈𝓏⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                 (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 + 1 = m) (S : Tm l) (a A_1 : Tm m),
--                     Γ_1 ⊢ S type →
--                       eqM ▸ Γ ⬝ 𝒩 ⬝ A = Γ_1 ⊗ Δ →
--                         eqM ▸ s = a →
--                           eqM ▸ A⌈(ₛ↑ₚidₚ), 𝓈(v(0))⌉⌊↑ₚidₚ⌋ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                   (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a A : Tm m),
--                       Γ_1 ⊢ S type →
--                         eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ 𝓏 = a → eqM ▸ 𝒩 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--                     ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                       Γ_1 ⊢ S type →
--                         eqM ▸ Γ = Γ_1 ⊗ Δ →
--                           eqM ▸ A.indNat z s 𝓏 = a →
--                             eqM ▸ z = a' → eqM ▸ A⌈𝓏⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermNatSuccComp
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {z x : Tm n} {A : Tm (n + 1)} {s : Tm (n + 2)},
--     Γ ⬝ 𝒩 ⊢ A type →
--       (Γ ⊢ z ∶ A⌈𝓏⌉₀) →
--         (Γ ⬝ 𝒩 ⬝ A ⊢ s ∶ A⌈(ₛ↑ₚidₚ), 𝓈(v(0))⌉⌊↑ₚidₚ⌋) →
--           (Γ ⊢ x ∶ 𝒩) →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (A_1 : Tm m),
--                 Γ_1 ⊢ S type → eqM ▸ Γ ⬝ 𝒩 = Γ_1 ⊗ Δ → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ z = a → eqM ▸ A⌈𝓏⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                 (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 + 1 = m) (S : Tm l) (a A_1 : Tm m),
--                     Γ_1 ⊢ S type →
--                       eqM ▸ Γ ⬝ 𝒩 ⬝ A = Γ_1 ⊗ Δ →
--                         eqM ▸ s = a →
--                           eqM ▸ A⌈(ₛ↑ₚidₚ), 𝓈(v(0))⌉⌊↑ₚidₚ⌋ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                   (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a A : Tm m),
--                       Γ_1 ⊢ S type →
--                         eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ x = a → eqM ▸ 𝒩 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--                     ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                       Γ_1 ⊢ S type →
--                         eqM ▸ Γ = Γ_1 ⊗ Δ →
--                           eqM ▸ A.indNat z s 𝓈(x) = a →
--                             eqM ▸ s⌈(ₛidₚ), x, A.indNat z s x⌉ = a' →
--                               eqM ▸ A⌈𝓈(x)⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermIdenComp
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A : Tm n} {B : Tm (n + 1 + 1 + 1)} {b a : Tm n},
--     (Γ ⬝ A ⬝ A⌊↑ₚidₚ⌋ ⬝ v(1) ≃[A⌊↑ₚ↑ₚidₚ⌋] v(0)) ⊢ B type →
--       (Γ ⊢ b ∶ B⌈(ₛidₚ), a, a, A.refl a⌉) →
--         (Γ ⊢ a ∶ A) →
--           Γ ⊢ B⌈(ₛidₚ), a, a, A.refl a⌉ type →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 + 1 + 1 = m) (S : Tm l) (A_1 : Tm m),
--                 Γ_1 ⊢ S type →
--                   (eqM ▸ Γ ⬝ A ⬝ A⌊↑ₚidₚ⌋ ⬝ v(1) ≃[A⌊↑ₚ↑ₚidₚ⌋] v(0)) = Γ_1 ⊗ Δ →
--                     eqM ▸ B = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_6 A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       eqM ▸ b = a_6 →
--                         eqM ▸ B⌈(ₛidₚ), a, a, A.refl a⌉ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_6⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                 (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_7 A_1 : Tm m),
--                     Γ_1 ⊢ S type →
--                       eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ a = a_7 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_7⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                   (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A_1 : Tm m),
--                       Γ_1 ⊢ S type →
--                         eqM ▸ Γ = Γ_1 ⊗ Δ →
--                           eqM ▸ B⌈(ₛidₚ), a, a, A.refl a⌉ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--                     ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_9 a' A_1 : Tm m),
--                       Γ_1 ⊢ S type →
--                         eqM ▸ Γ = Γ_1 ⊗ Δ →
--                           eqM ▸ A.j B b a a (A.refl a) = a_9 →
--                             eqM ▸ b = a' →
--                               eqM ▸ B⌈(ₛidₚ), a, a, A.refl a⌉ = A_1 →
--                                 (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_9⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermUnitIntroEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n},
--     Γ ctx →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l),
--           Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ctx) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ ⋆ = a → eqM ▸ ⋆ = a' → eqM ▸ 𝟙 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermUnitElimEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A A' : Tm (n + 1)} {a a' b b' : Tm n},
--     Γ ⬝ 𝟙 ⊢ A ≡ A' type →
--       (Γ ⊢ a ≡ a' ∶ A⌈⋆⌉₀) →
--         (Γ ⊢ b ≡ b' ∶ 𝟙) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (A_1 A'_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ ⬝ 𝟙 = Γ_1 ⊗ Δ →
--                   eqM ▸ A = A_1 → eqM ▸ A' = A'_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'_1⌊↑₁m↬l⌋ type) →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 a'_1 A_1 : Tm m),
--                 Γ_1 ⊢ S type →
--                   eqM ▸ Γ = Γ_1 ⊗ Δ →
--                     eqM ▸ a = a_5 →
--                       eqM ▸ a' = a'_1 → eqM ▸ A⌈⋆⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       eqM ▸ b = a → eqM ▸ b' = a' → eqM ▸ 𝟙 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--                 ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_7 a'_1 A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       eqM ▸ A.indUnit b a = a_7 →
--                         eqM ▸ A'.indUnit b' a' = a'_1 →
--                           eqM ▸ A⌈b⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_7⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermEmptyElimEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A A' : Tm (n + 1)} {b b' : Tm n},
--     Γ ⬝ 𝟘 ⊢ A ≡ A' type →
--       (Γ ⊢ b ≡ b' ∶ 𝟘) →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (A_1 A'_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ ⬝ 𝟘 = Γ_1 ⊗ Δ →
--                 eqM ▸ A = A_1 → eqM ▸ A' = A'_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'_1⌊↑₁m↬l⌋ type) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ b = a → eqM ▸ b' = a' → eqM ▸ 𝟘 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ A.indEmpty b = a →
--                     eqM ▸ A'.indEmpty b' = a' →
--                       eqM ▸ A⌈b⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermPiIntroEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A A' : Tm n} {b b' B : Tm (n + 1)},
--     (Γ ⬝ A ⊢ b ≡ b' ∶ B) →
--       Γ ⊢ A ≡ A' type →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (a a' A_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ ⬝ A = Γ_1 ⊗ Δ →
--                 eqM ▸ b = a → eqM ▸ b' = a' → eqM ▸ B = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A_1 A'_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ A = A_1 → eqM ▸ A' = A'_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'_1⌊↑₁m↬l⌋ type) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   (eqM ▸ λA; b) = a →
--                     (eqM ▸ λA'; b') = a' → (eqM ▸ ΠA;B) = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermPiElimEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {f f' A : Tm n} {B : Tm (n + 1)} {a a' : Tm n},
--     (Γ ⊢ f ≡ f' ∶ ΠA;B) →
--       (Γ ⊢ a ≡ a' ∶ A) →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ = Γ_1 ⊗ Δ →
--                 eqM ▸ f = a →
--                   eqM ▸ f' = a' → (eqM ▸ ΠA;B) = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_4 a'_1 A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ a = a_4 →
--                     eqM ▸ a' = a'_1 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_4⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 a'_1 A : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ f◃a = a_5 →
--                     eqM ▸ f'◃a' = a'_1 → eqM ▸ B⌈a⌉₀ = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermSigmaIntroEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {a a' A b b' : Tm n} {B : Tm (n + 1)},
--     (Γ ⊢ a ≡ a' ∶ A) →
--       (Γ ⊢ b ≡ b' ∶ B⌈a⌉₀) →
--         Γ ⬝ A ⊢ B type →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_4 a'_1 A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ a = a_4 →
--                     eqM ▸ a' = a'_1 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_4⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 a' A : Tm m),
--                 Γ_1 ⊢ S type →
--                   eqM ▸ Γ = Γ_1 ⊗ Δ →
--                     eqM ▸ b = a_5 →
--                       eqM ▸ b' = a' → eqM ▸ B⌈a⌉₀ = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (A_1 : Tm m),
--                   Γ_1 ⊢ S type → eqM ▸ Γ ⬝ A = Γ_1 ⊗ Δ → eqM ▸ B = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ type) →
--                 ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_7 a'_1 A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       eqM ▸ a&b = a_7 →
--                         eqM ▸ a'&b' = a'_1 →
--                           (eqM ▸ ΣA;B) = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_7⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermSigmaFirstEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {p p' A : Tm n} {B : Tm (n + 1)},
--     (Γ ⊢ p ≡ p' ∶ ΣA;B) →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ p = a →
--                 eqM ▸ p' = a' → (eqM ▸ ΣA;B) = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ π₁ p = a → eqM ▸ π₁ p' = a' → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermSigmaSecondEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {p p' A : Tm n} {B : Tm (n + 1)},
--     (Γ ⊢ p ≡ p' ∶ ΣA;B) →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ p = a →
--                 eqM ▸ p' = a' → (eqM ▸ ΣA;B) = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ π₂ p = a →
--                 eqM ▸ π₂ p' = a' → eqM ▸ B⌈π₁ p⌉₀ = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermNatZeroIntroEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n},
--     Γ ctx →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l),
--           Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ctx) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ 𝓏 = a → eqM ▸ 𝓏 = a' → eqM ▸ 𝒩 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermNatSuccIntroEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {x x' : Tm n},
--     (Γ ⊢ x ≡ x' ∶ 𝒩) →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ x = a → eqM ▸ x' = a' → eqM ▸ 𝒩 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ 𝓈(x) = a → eqM ▸ 𝓈(x') = a' → eqM ▸ 𝒩 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermNatElimEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {z z' x x' : Tm n} {A A' : Tm (n + 1)} {s s' : Tm (n + 2)},
--     Γ ⬝ 𝒩 ⊢ A ≡ A' type →
--       (Γ ⊢ z ≡ z' ∶ A⌈𝓏⌉₀) →
--         (Γ ⬝ 𝒩 ⬝ A ⊢ s ≡ s' ∶ A⌈(ₛ↑ₚidₚ), 𝓈(v(0))⌉⌊↑ₚidₚ⌋) →
--           (Γ ⊢ x ≡ x' ∶ 𝒩) →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (A_1 A'_1 : Tm m),
--                 Γ_1 ⊢ S type →
--                   eqM ▸ Γ ⬝ 𝒩 = Γ_1 ⊗ Δ →
--                     eqM ▸ A = A_1 → eqM ▸ A' = A'_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'_1⌊↑₁m↬l⌋ type) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       eqM ▸ z = a →
--                         eqM ▸ z' = a' → eqM ▸ A⌈𝓏⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                 (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 + 1 = m) (S : Tm l) (a a' A_1 : Tm m),
--                     Γ_1 ⊢ S type →
--                       eqM ▸ Γ ⬝ 𝒩 ⬝ A = Γ_1 ⊗ Δ →
--                         eqM ▸ s = a →
--                           eqM ▸ s' = a' →
--                             eqM ▸ A⌈(ₛ↑ₚidₚ), 𝓈(v(0))⌉⌊↑ₚidₚ⌋ = A_1 →
--                               (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                   (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--                       Γ_1 ⊢ S type →
--                         eqM ▸ Γ = Γ_1 ⊗ Δ →
--                           eqM ▸ x = a →
--                             eqM ▸ x' = a' → eqM ▸ 𝒩 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--                     ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                       Γ_1 ⊢ S type →
--                         eqM ▸ Γ = Γ_1 ⊗ Δ →
--                           eqM ▸ A.indNat z s x = a →
--                             eqM ▸ A'.indNat z' s' x' = a' →
--                               eqM ▸ A⌈x⌉₀ = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermIdenIntroEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A A' a a' : Tm n},
--     Γ ⊢ A ≡ A' type →
--       (Γ ⊢ a ≡ a' ∶ A) →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A_1 A'_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ A = A_1 → eqM ▸ A' = A'_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'_1⌊↑₁m↬l⌋ type) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_4 a'_1 A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ a = a_4 →
--                     eqM ▸ a' = a'_1 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_4⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 a'_1 A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ A.refl a = a_5 →
--                     eqM ▸ A'.refl a' = a'_1 →
--                       (eqM ▸ a ≃[A] a) = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermIdenElimEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A : Tm n} {B B' : Tm (n + 1 + 1 + 1)} {b b' a₁ a₃ A' a₂ a₄ p p' : Tm n},
--     (Γ ⬝ A ⬝ A⌊↑ₚidₚ⌋ ⬝ v(1) ≃[A⌊↑ₚ↑ₚidₚ⌋] v(0)) ⊢ B ≡ B' type →
--       (Γ ⊢ b ≡ b' ∶ B⌈(ₛidₚ), a₁, a₁, A.refl a₁⌉) →
--         Γ ⊢ A ≡ A' type →
--           (Γ ⊢ a₁ ≡ a₂ ∶ A) →
--             (Γ ⊢ a₃ ≡ a₄ ∶ A') →
--               (Γ ⊢ p ≡ p' ∶ a₁ ≃[A] a₃) →
--                 Γ ⊢ B⌈(ₛidₚ), a₁, a₁, A.refl a₁⌉ ≡ B'⌈(ₛidₚ), a₂, a₂, A'.refl a₂⌉ type →
--                   Γ ⊢ B⌈(ₛidₚ), a₁, a₃, p⌉ ≡ B'⌈(ₛidₚ), a₂, a₄, p'⌉ type →
--                     (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 + 1 + 1 = m) (S : Tm l) (A_1 A' : Tm m),
--                         Γ_1 ⊢ S type →
--                           (eqM ▸ Γ ⬝ A ⬝ A⌊↑ₚidₚ⌋ ⬝ v(1) ≃[A⌊↑ₚ↑ₚidₚ⌋] v(0)) = Γ_1 ⊗ Δ →
--                             eqM ▸ B = A_1 → eqM ▸ B' = A' → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'⌊↑₁m↬l⌋ type) →
--                       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                           Γ_1 ⊢ S type →
--                             eqM ▸ Γ = Γ_1 ⊗ Δ →
--                               eqM ▸ b = a →
--                                 eqM ▸ b' = a' →
--                                   eqM ▸ B⌈(ₛidₚ), a₁, a₁, A.refl a₁⌉ = A_1 →
--                                     (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A_1 A'_1 : Tm m),
--                             Γ_1 ⊢ S type →
--                               eqM ▸ Γ = Γ_1 ⊗ Δ →
--                                 eqM ▸ A = A_1 → eqM ▸ A' = A'_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'_1⌊↑₁m↬l⌋ type) →
--                           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                               Γ_1 ⊢ S type →
--                                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                                   eqM ▸ a₁ = a →
--                                     eqM ▸ a₂ = a' →
--                                       eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--                                 Γ_1 ⊢ S type →
--                                   eqM ▸ Γ = Γ_1 ⊗ Δ →
--                                     eqM ▸ a₃ = a →
--                                       eqM ▸ a₄ = a' →
--                                         eqM ▸ A' = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--                               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                                   Γ_1 ⊢ S type →
--                                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                                       eqM ▸ p = a →
--                                         eqM ▸ p' = a' →
--                                           (eqM ▸ a₁ ≃[A] a₃) = A_1 →
--                                             (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                                 (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A_1 A'_1 : Tm m),
--                                     Γ_1 ⊢ S type →
--                                       eqM ▸ Γ = Γ_1 ⊗ Δ →
--                                         eqM ▸ B⌈(ₛidₚ), a₁, a₁, A.refl a₁⌉ = A_1 →
--                                           eqM ▸ B'⌈(ₛidₚ), a₂, a₂, A'.refl a₂⌉ = A'_1 →
--                                             (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'_1⌊↑₁m↬l⌋ type) →
--                                   (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A A' : Tm m),
--                                       Γ_1 ⊢ S type →
--                                         eqM ▸ Γ = Γ_1 ⊗ Δ →
--                                           eqM ▸ B⌈(ₛidₚ), a₁, a₃, p⌉ = A →
--                                             eqM ▸ B'⌈(ₛidₚ), a₂, a₄, p'⌉ = A' →
--                                               (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A⌊↑₁m↬l⌋ ≡ A'⌊↑₁m↬l⌋ type) →
--                                     ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l)
--                                       (a a' A_1 : Tm m),
--                                       Γ_1 ⊢ S type →
--                                         eqM ▸ Γ = Γ_1 ⊗ Δ →
--                                           eqM ▸ A.j B b a₁ a₃ p = a →
--                                             eqM ▸ A'.j B' b' a₂ a₄ p' = a' →
--                                               eqM ▸ B⌈(ₛidₚ), a₁, a₃, p⌉ = A_1 →
--                                                 (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermUnivUnitEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n},
--     Γ ctx →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l),
--           Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ctx) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ 𝟙 = a → eqM ▸ 𝟙 = a' → eqM ▸ 𝒰 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermUnivEmptyEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n},
--     Γ ctx →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l),
--           Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ctx) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ 𝟘 = a → eqM ▸ 𝟘 = a' → eqM ▸ 𝒰 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermUnivPiEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A A' : Tm n} {B B' : Tm (n + 1)},
--     (Γ ⊢ A ≡ A' ∶ 𝒰) →
--       (Γ ⬝ A ⊢ B ≡ B' ∶ 𝒰) →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ = Γ_1 ⊗ Δ →
--                 eqM ▸ A = a → eqM ▸ A' = a' → eqM ▸ 𝒰 = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (a a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ ⬝ A = Γ_1 ⊗ Δ →
--                   eqM ▸ B = a → eqM ▸ B' = a' → eqM ▸ 𝒰 = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   (eqM ▸ ΠA;B) = a →
--                     (eqM ▸ ΠA';B') = a' → eqM ▸ 𝒰 = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermUnivSigmaEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A A' : Tm n} {B B' : Tm (n + 1)},
--     (Γ ⊢ A ≡ A' ∶ 𝒰) →
--       (Γ ⬝ A ⊢ B ≡ B' ∶ 𝒰) →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ = Γ_1 ⊗ Δ →
--                 eqM ▸ A = a → eqM ▸ A' = a' → eqM ▸ 𝒰 = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n + 1 = m) (S : Tm l) (a a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ ⬝ A = Γ_1 ⊗ Δ →
--                   eqM ▸ B = a → eqM ▸ B' = a' → eqM ▸ 𝒰 = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   (eqM ▸ ΣA;B) = a →
--                     (eqM ▸ ΣA';B') = a' → eqM ▸ 𝒰 = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermUnivNatEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n},
--     Γ ctx →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l),
--           Γ_1 ⊢ S type → eqM ▸ Γ = Γ_1 ⊗ Δ → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ctx) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ 𝒩 = a → eqM ▸ 𝒩 = a' → eqM ▸ 𝒰 = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermUnivIdenEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {A A' a₁ a₂ a₃ a₄ : Tm n},
--     (Γ ⊢ A ≡ A' ∶ 𝒰) →
--       (Γ ⊢ a₁ ≡ a₂ ∶ A) →
--         (Γ ⊢ a₃ ≡ a₄ ∶ A) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ A = a → eqM ▸ A' = a' → eqM ▸ 𝒰 = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--             (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                 Γ_1 ⊢ S type →
--                   eqM ▸ Γ = Γ_1 ⊗ Δ →
--                     eqM ▸ a₁ = a →
--                       eqM ▸ a₂ = a' → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--               (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       eqM ▸ a₃ = a →
--                         eqM ▸ a₄ = a' → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--                 ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A_1 : Tm m),
--                   Γ_1 ⊢ S type →
--                     eqM ▸ Γ = Γ_1 ⊗ Δ →
--                       (eqM ▸ a₁ ≃[A] a₃) = a →
--                         (eqM ▸ a₂ ≃[A'] a₄) = a' → eqM ▸ 𝒰 = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermTyConvEq
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {a b A B : Tm n},
--     (Γ ⊢ a ≡ b ∶ A) →
--       Γ ⊢ A ≡ B type →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_3 a' A_1 : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ = Γ_1 ⊗ Δ →
--                 eqM ▸ a = a_3 →
--                   eqM ▸ b = a' → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_3⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (A_1 A' : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ → eqM ▸ A = A_1 → eqM ▸ B = A' → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ A_1⌊↑₁m↬l⌋ ≡ A'⌊↑₁m↬l⌋ type) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_5 a' A : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ a = a_5 → eqM ▸ b = a' → eqM ▸ B = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_5⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
-- case IsEqualTermTermSymm
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {a a' A : Tm n},
--     (Γ ⊢ a ≡ a' ∶ A) →
--       (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_1 a'_1 A_1 : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ a = a_1 →
--                 eqM ▸ a' = a'_1 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_1⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋) →
--         ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_2 a'_1 A_1 : Tm m),
--           Γ_1 ⊢ S type →
--             eqM ▸ Γ = Γ_1 ⊗ Δ →
--               eqM ▸ a' = a_2 →
--                 eqM ▸ a = a'_1 → eqM ▸ A = A_1 → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_2⌊↑₁m↬l⌋ ≡ a'_1⌊↑₁m↬l⌋ ∶ A_1⌊↑₁m↬l⌋
-- case IsEqualTermTermTrans
-- ⊢ ∀ {n : Nat} {Γ : Ctx n} {T a b c : Tm n},
--     (Γ ⊢ a ≡ b ∶ T) →
--       (Γ ⊢ b ≡ c ∶ T) →
--         (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_1 a' A : Tm m),
--             Γ_1 ⊢ S type →
--               eqM ▸ Γ = Γ_1 ⊗ Δ →
--                 eqM ▸ a = a_1 → eqM ▸ b = a' → eqM ▸ T = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_1⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--           (∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a a' A : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ b = a → eqM ▸ c = a' → eqM ▸ T = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋) →
--             ∀ (m l : Nat) (Γ_1 : Ctx l) (Δ : CtxGen l m) (eqM : n = m) (S : Tm l) (a_3 a' A : Tm m),
--               Γ_1 ⊢ S type →
--                 eqM ▸ Γ = Γ_1 ⊗ Δ →
--                   eqM ▸ a = a_3 → eqM ▸ c = a' → eqM ▸ T = A → (Γ_1 ⬝ S ⊗ ⌊↑₁↬l⌋Δ) ⊢ a_3⌊↑₁m↬l⌋ ≡ a'⌊↑₁m↬l⌋ ∶ A⌊↑₁m↬l⌋
